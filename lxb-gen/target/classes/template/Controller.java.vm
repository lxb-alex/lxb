package ${package}.controller;

import com.alibaba.fastjson.JSONObject;
import com.lxb.common.base.BaseController;
import com.lxb.common.utils.MessageVo;
import com.lxb.common.utils.PageUtil;
import com.lxb.common.utils.Query;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import java.util.List;
import java.util.Map;

import ${package}.entity.${className}Entity;
import ${package}.service.${className}Service;

/**
 * ${comments}
 * 
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${pathName}")
public class ${className}Controller extends  BaseController{
	@Autowired
	private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @RequestMapping("/list")
    public JSONObject list(@RequestParam Map<String, Object> params){
        //查询列表数据
        Query query = new Query(params);

        int total = ${classname}Service.getTotal(query); // 当前条件得到的总记录数
        List<${className}Entity> ${classname}List = null;
        int rowNum =  (query.getPage()-1)*query.getPageSize(); // 当前分页开始记录数
        if (total> rowNum){
				${classname}List = ${classname}Service.selectList(query);
        }

        PageUtil page = new PageUtil(total, query.getPage(), query.getPageSize(), ${classname}List);

        return PageUtil.convertToJSONObject(page);
    }
	
	
	/**
	 * 信息
	 */
	@RequestMapping("/info/{${pk.attrname}}")
	public MessageVo info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
		${className}Entity ${classname} = ${classname}Service.get${className}Entity(${pk.attrname});

        return new MessageVo(MessageVo.SUCCESS, ${classname});
	}
	
	/**
	 * 保存
	 */
	@RequestMapping("/save")
	public MessageVo save(@RequestBody ${className}Entity ${classname}){
		${classname}Service.save(${classname});

        return new MessageVo(MessageVo.SUCCESS, null);
	}
	
	/**
	 * 修改
	 */
	@RequestMapping("/update")
	public MessageVo update(@RequestBody ${className}Entity ${classname}){
		${classname}Service.update(${classname});

        return new MessageVo(MessageVo.SUCCESS, null);
	}
	
	/**
	 * 删除
	 */
	@RequestMapping("/delete")
	public MessageVo delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){
		${classname}Service.deleteBatch(${pk.attrname}s);

        return new MessageVo(MessageVo.SUCCESS, null);
	}
	
}
