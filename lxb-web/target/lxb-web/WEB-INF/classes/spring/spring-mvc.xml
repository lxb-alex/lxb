<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
     	http://www.springframework.org/schema/aop
     	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/mvc
     	http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

    <!-- 自动扫描 -->
    <context:component-scan base-package="com.lxb">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!-- 启用aop功能 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!-- 启动注解 -->
    <mvc:annotation-driven conversion-service="conversionService">
        <mvc:message-converters register-defaults="true">
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <value>WriteMapNullValue</value>
                        <value>QuoteFieldNames</value>
                        <value>WriteDateUseDateFormat</value>
                        <!-- 禁用fastjson循环引用检测 -->
                        <value>DisableCircularReferenceDetect</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 全局时间转换 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="com.lxb.common.utils.DateConverter"/>
            </list>
        </property>
    </bean>

    <!--Velocity 视图解析器在 spring4.3 已放弃支持-->
    <!-- Velocity视图解析器    默认视图  -->
    <bean id="velocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="dateToolAttribute" value="date"/> <!--日期函数名称-->
        <property name="numberToolAttribute" value="number"/> <!--数字函数名称-->
        <!-- 把 spring 的 RequestContext 对象暴露为变量 rc， 利用${rc.contextPath}获取程序路径 -->
        <!--request属性引用名称-->
        <property name="requestContextAttribute" value="rc"/>
        <property name="viewNames" value="*.html"/>
        <property name="suffix" value=""/><!-- 视图文件的后缀名 -->
        <property name="order" value="0"/> <!--多视图解析器时加载顺序-->
    </bean>
    <!--Velocity 环境配置-->
    <bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <!--Velocity 模板路径-->
        <property name="resourceLoaderPath" value="/WEB-INF/page/"/>
        <!-- Velocity 配置属性，或则用configLocation指定路径 -->
        <property name="velocityProperties">
            <props>
                <prop key="input.encoding">UTF-8</prop>
                <prop key="output.encoding">UTF-8</prop>
                <prop key="contentType">text/html;charset=UTF-8</prop>
            </props>
        </property>
    </bean>

    <!-- JSP视图解析器  -->
    <bean id="viewResolverJsp" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/page/"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="viewNames" value="*.jsp"/>
        <property name="suffix" value=""/>
        <property name="order" value="1"/>
    </bean>

    <!-- 将静态资源的处理经由Spring MVC框架交回Web应用服务器处理 -->
    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler/>

    <!-- 静态资源映射 -->
    <mvc:resources mapping="/static/**" location="/static/" cache-period="31536000"/>

    <!-- 拦截器配置，拦截顺序：先执行后定义的，排在第一位的最后执行。-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/"/>
            <bean class="com.lxb.sys.interceptor.LogInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

<!--    &lt;!&ndash; 上传限制 &ndash;&gt;
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="1000000000"/>
    </bean>-->

<!--    &lt;!&ndash; FreeMarker视图解析器 &ndash;&gt;
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <property name="contentType" value="text/html; charset=utf-8"/>
        <property name="cache" value="false"/>
        <property name="viewNames" value="*.ftl"/>
        <property name="suffix" value=""/>
        <property name="order" value="2"/>
    </bean>
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/page/"/>
    </bean>-->

    <!--    &lt;!&ndash; Kaptcha验证码生成器 &ndash;&gt;
        <bean name="producer" class="com.google.code.kaptcha.impl.DefaultKaptcha" scope="singleton">
            <property name="config">
                <bean class="com.google.code.kaptcha.util.Config">
                    <constructor-arg>
                        <props>
                            <prop key="kaptcha.border">no</prop>
                            <prop key="kaptcha.textproducer.font.color">black</prop>
                            <prop key="kaptcha.textproducer.char.space">5</prop>
                            <prop key="kaptcha.textproducer.char.length">4</prop>
                        </props>
                    </constructor-arg>
                </bean>
            </property>
        </bean>-->

</beans>
